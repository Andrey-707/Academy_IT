# Задача№3.стр.30. Слияние двух списков со смещением элементов.
# Напишите функцию, которая создает комбинацию двух списков таким образом.
# [1, 2, 3] (+) [11, 22, 33] -> [1, 11, 2, 22, 3, 33]

from rich import print


# 1.Решение через вливание в первый список.

def merge_lists(x:list, y:list):
    '''Функция принимает на входе два списка, комбинирует элементы следующим образом:
    [1, 2, 3] (+) [11, 22, 33] -> [1, 11, 2, 22, 3, 33]
    '''
    a = 1 # в метода insert() выбираем ВТОРОЙ элемент, его индекс равен 1, поэтому a = 1
    for i in range(len(y)):
        x.insert(a, y[i])
        a += 2 # шагаем через 1 элемент, поэтому увеличиваем на 2
    return x


# создадим два асимметричных списка (один короче другого по кол-ву элементов). Список list2 короче списка list1.
list1 = [1, 2, 3, 4]
# print(list1)
list2 = [11, 22, 33]
# print(list2)
print(merge_lists(list1, list2))

# и наоборот, если список list1 короче списка list2.
list1 = [1, 2, 3]
# print(list1)
list2 = [11, 22, 33, 44]
# print(list2)
print(merge_lists(list1, list2))


# 2.Решение через создание нового списка.

def merge_lists(x:list, y:list):
    '''Функция принимает на входе два списка, комбинирует элементы следующим образом:
    [1, 2, 3] (+) [11, 22, 33] -> [1, 11, 2, 22, 3, 33]
    '''
    c = []
    m = min(len(x), len(y))
    for i in range(m):
        c.append(x[i])
        c.append(y[i])
    if m == len(x):
        c += y[m:]
    else:
        c += x[m:]
    return c


# создадим два асимметричных списка (один короче другого по кол-ву элементов). Список list2 короче списка list1.
list1 = [1, 2, 3, 4]
# print(list1)
list2 = [11, 22, 33]
# print(list2)

print(merge_lists(list1, list2))

# и наоборот, если список list1 короче списка list2.
list1 = [1, 2, 3]
# print(list1)
list2 = [11, 22, 33, 44]
# print(list2)

print(merge_lists(list1, list2))


# 3.Решение через создание нового списка. Работает если списки одной длины или список list2 короче списка list1.
# Если второй список длиннее первого, то метод объединяет списки так: [11, 1, 22, 2, 33, 3, 44]
# т.е. первый список вливается во второй (меньший вливается в больший).

def merge_lists(x:list, y:list):
    l = [0]*(len(x) + len(y))
    for i in range(len(l)):
        if len(x) >= len(y):
            if i % 2 == 0:
                l[i] = x[i//2]
            else:
                l[i] = y[i//2]
        else:
            if i % 2 == 0:
                l[i] = y[i//2]
            else:
                l[i] = x[i//2]
    return l


# создадим два асимметричных списка (один короче другого по кол-ву элементов). Список list2 короче списка list1.
list1 = [1, 2, 3, 4]
# print(list1)
list2 = [11, 22, 33]
# print(list2)

print(merge_lists(list1, list2))

# и наоборот, если список list1 короче списка list2.
list1 = [1, 2, 3]
# print(list1)
list2 = [11, 22, 33, 44]
# print(list2)

print(merge_lists(list1, list2))


# 4.Решение с использованием двух функций (создание списка и слияние списков)
# Если второй список длиннее первого, то метод объединяет списки так: [11, 1, 22, 2, 33, 3, 44]
# т.е. первый список вливается во второй (меньший вливается в больший).

def app_list(l1, l2):
    '''Функция генерирует из двух списков новый список'''
    l3 = []
    j = 0
    for i in range(len(l2)):
        l3.append(l1[i])
        l3.append(l2[i])
        j += 1
    l_sim = l1[j:]
    for k in range(len(l_sim)):
        l3.append(l_sim[k])
    return l3


def merge_lists(l1, l2):
    '''Функция генерирует новый список в зависимости от того, какой из списков больший по длине'''
    if len(l1) >= len(l2):
        l3 = app_list(l1, l2)
    else:
        l3 = app_list(l2, l1)
    return l3


# создадим два асимметричных списка (один короче другого по кол-ву элементов). Список list2 короче списка list1.
list1 = [1, 2, 3, 4]
# print(list1)
list2 = [11, 22, 33]
# print(list2)

print(merge_lists(list1, list2))

# и наоборот, если список list1 короче списка list2.
list1 = [1, 2, 3]
# print(list1)
list2 = [11, 22, 33, 44]
# print(list2)

print(merge_lists(list1, list2))
