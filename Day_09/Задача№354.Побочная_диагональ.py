# Задача№354.Побочная диагональ.
# Дано число n, n \ (\leq\) 100 . Создайте массив n x n и заполните его по следующему правилу:
# числа на диагонали, идущей из правого верхнего в левый нижний угол, равны 1
# числа, стоящие выше этой диагонали равны 0
# числа, стоящие ниже этой диагонали равны 2

# Входные данные:
# программа получает на входе число n
# Выходные данные:
# Необходимо вывести полученный массив. Числа разделяйте одним пробелом.

from rich import print # для удобства визуализации


n = int(input("n -- ")) # количество строк (или вложенных списков) и столбцов
matrix = [] # пустая матрица
r = 0 # переменная заполнения матрицы

# Необходимо создать матрицу размерами 4 на 4
'''
[[0, 0, 0, 1],
 [0, 0, 1, 2],
 [0, 1, 2, 2],
 [1, 2, 2, 2]]
'''

# поскольку матрица 4 х 4, если число лежит на побочной диагонали сумма индексов i + j = n - 1 (т.е. равна 3)
for i in range(n):
    matrix.append([])
    for j in range(n):
        # при создании матрица заполняется нулями
        matrix[i].append(r)
        # если элемент матрицы подходит по условию, ему присваивается единица
        # либо i + j = n - 1
        if j == n-1 - i:
            matrix[i][j] = 1
        # если элемент матрицы подходит по условию, ему присваивается двойка
        # либо i + j = n - 1
        elif j > n-1 - i:
            matrix[i][j] = 2 
        # если нули нужно заменить на другое число, пользуемся else    
        # else: # j < n-1 - i
        #   matrix[i][j] = 7

# Используя 'list comprehension' можно создать аналогичную матрицу в одну строчку
matrix = [[1 if row+col == n-1 else 2 if row+col > n-1 else 0 for row in range(n)] for col in range(n)]

# форматный (построчный) вывод элементов матрицы
print("---Matrix---")
for i in matrix:
    for j in i:
        print(f"{j:3d}", end="")
    print()
