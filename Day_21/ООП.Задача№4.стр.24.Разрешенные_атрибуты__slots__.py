# Задача№4.стр.24.Разрешенные_атрибуты__slots__
# Николай - оригинальный человек. Он решил создать класс Nikola, принимающий при инициализации два параметра:
# имя и возраст.
# Но на этом он не успокоился.
# Не важно, какое имя передаст пользователь при создании экземпляра, оно всегда будет "Николай".
# В частности - если пользователя всамом деле зовут Николаем, то с именем ни чего не произойдет, а если его
# зовут Максим, то оно преобразуется в "Я не Максим, а Николай".
# Более того, ни каких других атрибутов и методов у экземпляра не может быть добавлено, даже если кто-то и
# вздумает так поступить (т.е. если некий пользователь решит прибавить к экземпляру свойство "отчество" или
# метод "приветствие", то у него ни чего не получится).

# Решение:
class Nikola:

    __slots__ = ['name', 'age']  # разрешено только то, что здесь прописано

    def __init__(self, name, age):
        if name != "Николай":
            self.name = f"Я не {name}, а Николай."
        else:
            self.name = f"Я {name}."
        self.age = f"Мой возраст {age}."


# Создаем экземпляр класса с именем Николай
person1 = Nikola("Николай", 22)
print(person1.name, person1.age) # OUT: Я Николай. Мой возраст 22.

# Создаем экземпляр класса с именем Иван (не получится, т.к. не подходит по условию)
person2 = Nikola("Иван", 31)
print(person2.name, person2.age) # OUT: Я не Иван, а Николай. Мой возраст 31.

# Поскольку разрешенные_атрибуты, указанные в __slots__ только ['name', 'age'], добавить новый атрибут не
# получится
# person1.surname = "Петров"
# print(person1.surname) # OUT: AttributeError: 'Nikola' object has no attribute 'surname'
