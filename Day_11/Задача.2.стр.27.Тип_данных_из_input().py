# Задача№2.стр.27.Тип данных из input()
# Пользователь ввел строку с символами.
# Узнать какой тип данных он ввел.

# Ввод:
# -123, 5.5, 5e50, tom, +4, .50, 3,14, -0.5697
from rich import print
from ast import literal_eval


def get_type(input_data):
    '''Функция проверяет какого типа данные, введеннные пользователем'''
    try:
        return type(literal_eval(input_data))
    except (ValueError, SyntaxError):
        # строка, поэтому возвращаем тип данных str
        return str

# ------------------- узнаем какой тип данных имеют элементы в строке, перечисленные через запятую --------------------

# str_1 = input() # ввод от пользователя
str_1 = "-123, 5.5, 5e50, tom, +4, .50, 3,14, -0.5697" # чтобы не вводить через input() передаем строку в переменную
print(f"str_1:\n{str_1}\n")

# для обхода по элементам разобьем строку по ", " и приведем к списку
list_1 = str_1.split(", ")
# print(f"list_1:\n{list_1}\n")

print("Проверка типа данных.")
for i in list_1:
    print(f"'{i}'", get_type(i), sep=" по типу данных является ")

print() # пустая строка

# ------------------- узнаем какой тип данных имеет введенная пользователем строка -----------------------------------

# str_1 = input() # ввод от пользователя
str_1 = "-123, 5.5, 5e50, tom, +4, .50, 3,14, -0.5697" # чтобы не вводить через input() передаем строку в переменную
print(f"str_1 ('tom' является переменной):\n{str_1}")
print("'str_1' по типу данных является:", get_type(str_1), "\n") # <class 'str'>

# -----------поскольку tom - переменная, сделаем его строкой 'tom' и повторим запрос----------------------------------

# str_1 = input() # ввод от пользователя
str_1 = "-123, 5.5, 5e50, 'tom', +4, .50, 3,14, -0.5697" # чтобы не вводить через input() передаем строку в переменную
print(f"str_1 ('tom' является строкой и элементом кортежа):\n{str_1}")
print("'str_1' по типу данных является:", get_type(str_1)) # <class 'tuple'>
