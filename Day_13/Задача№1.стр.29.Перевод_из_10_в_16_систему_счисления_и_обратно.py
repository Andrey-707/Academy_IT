# Задача№1.стр.29.
# Напишите две функции:
# def convert_10_16(s) - получает число в 10-чной системе счисления, возвращает в 16-чной.
# def convert_16_10(s) - получает число в 16-чной системе счисления, возвращает в 10-чной.
from rich import print


# ключ словаря в 10-ричной, а значения в 16-ричной
dict_ = {0: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7",
         8: "8", 9: "9", 10: "a", 11: "b", 12: "c", 13: "d", 14: "e", 15: "f"}

def convert_10_16(s:str):
    '''Функция переводит число из 10-ричной в 16-ричную систему счисления'''
    s = int(s)
    a = s % 16 # крайнее правое число
    # print("a", a) # a = 15
    b = (s - a) // 16
    # print("b", b) # b = 0
    # достаем из словаря dict_ по индексам 'b', затем 'a' значения в виде (type str) и склеиваем в число
    return dict_[b] + dict_[a]


# run
s = "15"
print(convert_10_16(s)) # OUT: 0f

# при попытке перевести число 300 программа валится
s = "300"
print(convert_10_16(s)) # OUT: KeyError: 18


# ----------------------------------------------------ДЛЯ БОЛЬШИХ ЧИСЕЛ------------------------------------------------
# ключ словаря в 10-ричной, а значения в 16-ричной
dict_ = {0: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7",
         8: "8", 9: "9", 10: "a", 11: "b", 12: "c", 13: "d", 14: "e", 15: "f"}

# комментарии в принтах функции для перевода числа 300 из 10 в 16
def convert_10_16(s:str):
    '''Функция переводит число из 10-ричной в 16-ричную систему счисления'''
    l = [int(s)]
    i = 0
    while l[i] > 15:
        a = l[i] % 16 # крайнее правое число
        # print("a", a) # a = 6
        b = (l[i] - a) // 16
        # print("b", b) # b = 578 -> a = a, b = 36 - > a = 4, b = 2
        l.append(b)
        l[i] = a
        # print(l) # l = [6, 2, 4, 2]
        i += 1
    s2 = ""
    # сопоставляет число из списка l с индексом j словарю, затем полученное число (type str) приклеивает к строке s2
    for j in range(len(l)-1, 0-1, -1):
        # print(j) # индексы j списка l в убывающем порядке 3, 2, 1, 0
        s2 += dict_[l[j]]
    return s2


# run
s = "300"
print(convert_10_16(s)) # OUT: 12c

# и так тоже работает
s = "9252"
print(convert_10_16(s)) # OUT: 2424

# преобразование в 16-ричную чистему счисления встроенной функцией hex()
print(hex(300)) # OUT: 0x12c
print(hex(9252)) # OUT: 0x2424


# комментарии принтах функции для перевода числа 9756265 из 10 в 16
def convert_10_16(s:str):
    '''Функция переводит число из 10-ричной в 16-ричную систему счисления'''
    l = [int(s)]
    i = 0
    while l[i] > 15:
        a = l[i] % 16 # крайнее правое число
        # print("a", a) # a = 9
        b = (l[i] - a) // 16
        # print("b", b) # b = 609766 -> a = 6, b = 38110 - > a = 14, b = 2381 -> a = 13, b = 148 -> a = 4, b = 9
        l.append(b)
        l[i] = a
        # print(l) # l = [9, 6, 14, 13, 4, 9]
        i += 1
    s2 = ""
    # сопоставляет число из списка l с индексом j словарю, затем полученное число (type str) приклеивает к строке s2
    for j in range(len(l)-1, 0-1, -1):
        print(j) # индексы j списка l в убывающем порядке 5, 4, 3, 2, 1, 0
        s2 += dict_[l[j]]
    return s2


# run
s = "9756265"
print(convert_10_16(s)) # OUT: 94de69
print(hex(9756265)) # OUT: 0x94de69

# ----------------------------------------------------В ОБРАТНУЮ СТОРОНУ из 16 в 10-----------------------------------------

dict_ = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7,
         "8": 8, "9": 9, "a": 10, "b": 11, "c": 12, "d": 13, "e": 14, "f": 15}

# комментарии принтах функции для перевода числа f3 из 16 в 10
def convert_16_10(s:str):
    '''Функция переводит число из 16-ричной в 10-ричную систему счисления'''
    l = [dict_[i] for i in s]
    print(l) # [15, 3]
    l2 = l[::-1]
    print(l2) # [3, 15]
    s2 = 0
    # достает из списка l2 числа по индексам и выполняет преобразование
    for i in range(len(l2)):
        print(i) # индексы списка l2 0, 1
        s2 += 16**i * l2[i] # 3 + 16*15 = 243
    return s2


# run
s = "f3"
print(convert_16_10(s)) # OUT: 243


# комментарии принтах функции для перевода числа 94de69 из 16 в 10
def convert_16_10(s:str):
    '''Функция переводит число из 16-ричной в 10-ричную систему счисления'''
    l = [dict_[i] for i in s]
    # print(l) # [9, 4, 13, 14, 6, 9]
    l2 = l[::-1]
    # print(l2) # [9, 6, 14, 13, 4, 9]
    s2 = 0
    # достает из списка l2 числа по индексам и выполняет преобразование
    for i in range(len(l2)):
        # print(i) # индексы списка 'l2' 0, 1, 2, 3 ,4, 5
        # 16**0*9 + 16**1*6 + 16**2*14 + 16**3*13 + 16**4*4 + 16**5*9
        s2 += 16**i * l2[i] # 9 + 96 + 3584 + 53248 + 262144 + 9437184 = 9756265
    return s2


# run
s = "94de69"
print(convert_16_10(s)) # OUT: 9756265
