# Заполнение_матрицы_по_спирали.Из_лев_верх_угла_по_часовой
from rich import print


def spiral_matrix(n):
    '''Функция генерирует матрицу, заполненную символами, начиная с единицы. С каждым шагом символ
    заполнения увеличивается на единицу.
    Заполнение начинается из левого верхнего угла и продолжается по часовой стрелке'''
    matrix = [[0 for j in range(n)] for i in range(n)] # генерация матрицы
    N = n * n
    i = 0 # обнуление счетчиков и инициализация центрального элемента
    j = 0
    k = 1
    while k <= N:
        matrix[i][j] = k
        # Если у нас верхняя сторона прямоугольника и мы не достигла правой стороны, то двигаемся вправо: j+=1
        if i <= j + 1 and i + j < n - 1:
            j += 1
        # Если мы на правой стороне прямоугольника и не достигли нижней стороны, то двигаемся вниз: i+=1
        elif i < j and i + j >= n - 1:
            i += 1
        # Если мы на нижней стороне прямоугольника и не достигли левой стороны, то двигаемся влево: j-=1
        elif i >= j and i + j > n - 1:
            j -= 1
        # Иначе двигаемся вверх: i-=1
        else:
            i -= 1
        k += 1
    
    # форматный (построчный) вывод элементов матрицы
    print("-" * (n//2+n//2)  + "Matrix" + "-" * (n//2+n//2))
    for i in matrix:
        for j in i:
            print(f"{j:3d}", end="")
        print()


# run
if __name__ == "__main__":
    n = int(input("n = "))
    spiral_matrix(n)
