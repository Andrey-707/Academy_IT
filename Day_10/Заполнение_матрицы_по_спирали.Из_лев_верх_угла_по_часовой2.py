# Заполнение_матрицы_по_спирали.Из_лев_верх_угла_по_часовой
from rich import print


def spiral_matrix(n):
    '''Функция генерирует матрицу, заполненную символами, начиная с единицы. С каждым шагом символ
    заполнения увеличивается на единицу.
    Заполнение начинается из левого верхнего угла и продолжается по часовой стрелке'''
    matrix = [[0 for i in range(n)] for j in range(n)]  # генерация нулевой матрицы

    # st - текущее значение-счетчик для записи в матрицу
    # m - коеффициент, используемый для заполнения верхней матрицы последующих витков, т.к. одномерные
    # матрицы следующих витков имеют меньше значений
    st, m = 1, 0

    # присваивание значения центру матрицы
    matrix[n//2][n//2] = n*n

    # заполнение остальных точек
    for v in range(n//2):
        # заполнение  верхней горизонтальной матрицы
        for i in range(n - m):
            matrix[v][i + v] = st
            st += 1
        # заполнение правой вертикальной матрицы    
        for i in range(v + 1, n - v):
            matrix[i][-v - 1] = st
            st += 1
        # заполнение нижней горизонтальной матрицы
        for i in range(v + 1, n - v):
            matrix[-v - 1][-i - 1] = st
            st += 1
        # заполнение левой вертикальной матрицы
        for i in range(v + 1, n - (v + 1)):
            matrix[-i - 1][v] = st
            st += 1
        m += 2

    # форматный (построчный) вывод элементов матрицы
    print("-" * (n//2+n//2)  + "Matrix" + "-" * (n//2+n//2))
    for i in matrix:
        for j in i:
            print(f"{j:3d}", end="")
        print()


# run
if __name__ == "__main__":
    n = int(input("n = ")) # размерность матрицы n x n
    spiral_matrix(n)
