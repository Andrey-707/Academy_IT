# Напишите программу, которая получает на входе число и проверяет, является ли оно простым.
# Простое число - это натуральное (целое положительное число), имеющее ровно два различных натуральных
# делителя - единицу и самого на себя.

# Алгоритм:
# Получить x натуральное число
# Установить делитель = 2
# Пока x > делителя:
#   если нет остатка от деления x на делитель:
#       число не простое, остановить цикл
#   Увеличить делитель на 1

# Если число простое - функция isprime() вернет True, в обратном случае - False.
from sympy import isprime #  функция isprime() для проверки решения

from rich import print # для удобства визуализации


def check_num(x):
    '''Функция принимает в качестве аргумента число и исключает его,
    если оно меньше или равно 2'''
    assert x > 2, "Отрицательное число не является простым. Числа 1 и 2 - простые."
    return x


while True:
    # программа зациклена, для выхода ввести n
    try:
        escape = input("Продолжить программу y/n: ")
        if escape == "y":
            x = int(input("Введите натуральное число: "))
            d = 2
            # проверка чисел <= 2
            check_num(x)
            while x > d:
                if x % d == 0:
                    # проверка функцией из модуля sympy
                    print(isprime(x))
                    print("Число", x, "не простое, т.к.", x, "%", d, "== 0")
                    break
                else:
                    print("Увеличить делитель", d, "на 1")
                    d += 1
            else:
                # проверка функцией из модуля sympy
                print(isprime(x))
                print("Число", x, "простое")
        elif escape == "n":
            print("Выход из программы.")
            break
        else:
            print("Некорректный ввод. Введите y/n")
    except ValueError:
        print("ValueError! Введите число.")
    except AssertionError as a_ex:
        print("AssertionError!", a_ex)
