# -*- coding: utf-8 -*-
# Алгоритм Дэйкстра поиска кратчайшего расстояния. Асимптотика: O(N**2)

# Требования: веса - НЕ отрицательные числа (ноль допускается).
# Цель: поиск кратчайшего расстояния между станциями метрополитена города Санкт-Петербург

# Схема метро Санкт-Петербурга 2022 находится в файле Map_Metro_Spb_2022.png

import sys # для отпределения величины бесконечности sys.maxsize

from rich import print


class Graph:

    def __init__(self, nodes, init_graph):
        self.nodes = nodes
        self.graph = self.construct_graph(nodes, init_graph)

    def construct_graph(self, nodes, init_graph):
        """
        Метод обеспечивает симметричность графа.
        """
        graph = dict()
        for n in nodes:
            graph[n] = {}
        # Методом update() обновляем словарь. Если пара ключ-значение отсутствует, то вносим в словарь, иначе
        # заменяем значение при совпадение ключа.
        graph.update(init_graph)

        # симметричность графа
        for node, edges in graph.items():
            for node2, value in edges.items():
                # поиск ключа методом get(), если ключа нет, то присваивает ключу значение False
                if not graph[node2].get(node, False):
                    graph[node2][node] = value
        return graph

    def get_nodes(self):
        """
        Метод возвращает узлы графа.
        """
        return self.nodes

    def get_outgoing_edges(self, node):
        """
        Метод возвращает соседей узла.
        """
        connection = []
        for n in self.nodes:
            # поиск ключа методом get(), если ключа нет, то присваивает ключу значение False
            if self.graph[node].get(n, False):
                connection.append(n)
        return connection

    def value(self, node1, node2):
        """
        Метод возвращает значение ребра между двумя узлами графа.
        """
        if node1 not in self.nodes or node2 not in self.nodes:
            print('Маршрут не существует.')
            raise KeyError('Маршрут не существует.')
        return self.graph[node1][node2]


def dijkstra_algorithm(graph, start_node):
    """
    Функция поиска кратчайшего пути от начальной точки до всех точек графа.
    """
    unvisited_nodes = graph.get_nodes() # получает узлы графа
    shortest_path = {} # известное время в пути до каждого из узлов
    previous_nodes = {} # хранит траекторию текущего пути для каждого узла
    max_value = sys.maxsize # значение "бесконечность"

    # поставим время в пути до каждого узла равное бесконечности
    for node in unvisited_nodes:
        if node == start_node:
            shortest_path[node] = 0 # у начального города поставим значение 0
        else:
            shortest_path[node] = max_value

    while unvisited_nodes:
        current_min_node = None # сосед с минимальным временем в пути до него

        # пройдем циклом по всем путям, найдём соседа до которого ближе всего и запишем его в current_min_node
        for node in unvisited_nodes: # находим ближайшего соседа
            if current_min_node == None:
                current_min_node = node
            # проверяем, путь до следующего соседа короче, чем путь до ранее выбранного?
            elif shortest_path[node] < shortest_path[current_min_node]:
                current_min_node = node

        neighbours = graph.get_outgoing_edges(current_min_node) # получаем соседей соседа
        for n in neighbours:
            # расстояние до узла = цифра около узла + значение времени в пути
            tentative_value = shortest_path[current_min_node] + \
                              graph.value(current_min_node, n)

            if tentative_value < shortest_path[n]:
                shortest_path[n] = tentative_value # обновляем расстояние до узла
                previous_nodes[n] = current_min_node # обновим лучший путь к текущему узлу (кратчайшее время в пути)

        unvisited_nodes.remove(current_min_node) # забываем посещенный узел

    return previous_nodes, shortest_path


def print_result(previous_nodes, shortest_path, start_node, target_node):
    """
    Функция вывода данных.
    """
    path = []
    node = target_node # текущий узел при поиске пути

    while node != start_node:
        path.append(node)
        node = previous_nodes[node]
    path.append(start_node)

    print(f"Найден лучший маршрут из '{start_node}' в '{target_node}':")
    # print(" <- ".join(path)) # движение в обратную сторону
    print(" -> ".join(path[::-1])) # для движение вперед можно развернуть список и стрелочку 
    print("Время в пути:", shortest_path[target_node], 'мин.') # время между узлами в минутах


############################################# ТЕСТИРОВАНИЕ #############################################################

# стартовая точка
start_node = 'Приморская'

# пункт назначения
target_node = 'Василеостровкая'

# добавление имен узлов в виде списка
green_line = ['Беговая', 'Зенит', 'Приморская', 'Василеостровкая', 'Гостинный двор', 'Маяковская',
              'Площадь Александра Невского-1', 'Елизаровская', 'Ломоносовская', 'Пролетарская',
              'Обухово', 'Рыбацкое']

purple_line = ['Комендантский проспект', 'Старая деревня', 'Крестовский остров', 'Чкаловская', 'Спортивная',
               'Адмиралтейская', 'Садовая', 'Звенигородская', 'Обводный канал', 'Волковская', 'Бухаресткая',
               'Международная', 'Проспект Славы', 'Дунайская', 'Шушары']

blue_line = ['Парнас', 'Проспект Просвещения', 'Озерки', 'Удельная', 'Пионерская', 'Черная речка',
             'Петроградская', 'Горьковская', 'Невский проспект', 'Сенная площадь', 'Технологический институт-2',
             'Фрунзенская', 'Московские ворота', 'Электросила', 'Парк Победы', 'Московская', 'Звездная', 'Купчино']

red_line = ['Девяткино', 'Гражданский проспект', 'Академическая', 'Политехническая', 'Площадь Мужества', 'Лесная',
            'Выборгская', 'Площадь Ленина', 'Чернышевская', 'Площадь Восстания', 'Владимирская', 'Пушкинская',
            'Технологический институт-1', 'Балтийская', 'Нарвская', 'Кировский завод', 'Автово', 'Ленинский проспект',
            'Проспект Ветеранов']

yellow_line = ['Спасская', 'Достоевская', 'Лиговский проспект', 'Площадь Александра Невского-2',
                'Новочеркасская', 'Ладожская', 'Проспект Большевиков', 'Улица Дыбенко']

nodes = green_line + purple_line + blue_line + red_line + yellow_line

# добавление весов узлам (время в пути до узла).
# если станция закрыта или её нужно обьехать время в пути до станции нужно указать равным 0 (None).
init_graph = {'Беговая': {'Зенит': 4},
              'Зенит': {'Приморская': 4},
              'Приморская': {'Василеостровкая': 4},
              'Василеостровкая': {'Гостинный двор': 4},
              'Гостинный двор': {'Маяковская': 3, 'Невский проспект': 2},
              'Маяковская': {'Площадь Александра Невского-1': 3, 'Площадь Восстания': 2},
              'Площадь Александра Невского-1': {'Елизаровская': 5, 'Площадь Александра Невского-2': 2},
              'Елизаровская': {'Ломоносовская': 3},
              'Ломоносовская': {'Пролетарская': 3},
              'Пролетарская': {'Обухово': 3},
              'Обухово': {'Рыбацкое': 4},

              'Комендантский проспект': {'Старая деревня': 3},
              'Старая деревня': {'Крестовский остров': 3},
              'Крестовский остров': {'Чкаловская': 4},
              'Чкаловская': {'Спортивная': 2},
              'Спортивная': {'Адмиралтейская': 3},
              'Адмиралтейская': {'Садовая': 3},
              'Садовая': {'Звенигородская': 4, 'Спасская': 3, 'Сенная площадь': 3},
              'Звенигородская': {'Обводный канал': 3, 'Пушкинская': 2},
              'Обводный канал': {'Волковская': 3},
              'Волковская': {'Бухаресткая': 3},
              'Бухаресткая': {'Международная': 3},
              'Международная': {'Проспект Славы': 2},
              'Проспект Славы': {'Дунайская': 3},
              'Дунайская': {'Шушары': 3},

              'Парнас': {'Проспект Просвещения': 3},
              'Проспект Просвещения': {'Озерки': 2},
              'Озерки': {'Удельная': 3},
              'Удельная': {'Пионерская': 3},
              'Пионерская': {'Черная речка': 3},
              'Черная речка': {'Петроградская': 4},
              'Петроградская': {'Горьковская': 2},
              'Горьковская': {'Невский проспект': 4},
              'Невский проспект': {'Сенная площадь': 2, 'Гостинный двор': 2},
              'Сенная площадь': {'Технологический институт-2': 3, 'Садовая': 3, 'Спасская': 3},
              'Технологический институт-2': {'Фрунзенская': 2, 'Технологический институт-1': 1},
              'Фрунзенская': {'Московские ворота': 2},
              'Московские ворота': {'Электросила': 2},
              'Электросила': {'Парк Победы': 2},
              'Парк Победы': {'Московская': 3},
              'Московская': {'Звездная': 4},
              'Звездная': {'Купчино': 3},

              'Девяткино': {'Гражданский проспект': 3},
              'Гражданский проспект': {'Академическая': 3},
              'Академическая': {'Политехническая': 2},
              'Политехническая': {'Площадь Мужества': 3},
              'Площадь Мужества': {'Лесная': 3},
              'Лесная': {'Выборгская': 3},
              'Выборгская': {'Площадь Ленина': 2},
              'Площадь Ленина': {'Чернышевская': 3},
              'Чернышевская': {'Площадь Восстания': 2},
              'Площадь Восстания': {'Владимирская': 2, 'Маяковская': 2},
              'Владимирская': {'Пушкинская': 2, 'Достоевская': 2},
              'Пушкинская': {'Технологический институт-1': 2, 'Звенигородская': 2},
              'Технологический институт-1': {'Балтийская': 2, 'Технологический институт-2': 1},
              'Балтийская': {'Нарвская': 3},
              'Нарвская': {'Кировский завод': 4},
              'Кировский завод': {'Автово': 2},
              'Автово': {'Ленинский проспект': 3},
              'Ленинский проспект': {'Проспект Ветеранов': 2},

              'Спасская': {'Достоевская': 4, 'Садовая': 3, 'Сенная площадь': 3},
              'Достоевская': {'Лиговский проспект': 2, 'Владимирская': 2},
              'Лиговский проспект': {'Площадь Александра Невского-2': 2},
              'Площадь Александра Невского-2': {'Новочеркасская': 3, 'Площадь Александра Невского-1': 2},
              'Новочеркасская': {'Ладожская': 3},
              'Ладожская': {'Проспект Большевиков': 3},
              'Проспект Большевиков': {'Улица Дыбенко': 2}
}

# добавление графа
g = Graph(nodes, init_graph)

# построение графа
"""OUT:
Граф:
{'Беговая': {'Зенит': 4}, 'Зенит': {'Приморская': 4, 'Беговая': 4}, 'Приморская': {'Василеостровкая': 4, 'Зенит': 4},
'Василеостровкая': {'Гостинный двор': 4, 'Приморская': 4},
'Гостинный двор': {'Маяковская': 3, 'Невский проспект': 0.1, 'Василеостровкая': 4},
'Маяковская': {'Площадь Александра Невского-1': 3, 'Гостинный двор': 3, 'Площадь Восстания': 0},
'Площадь Александра Невского-1': {'Елизаровская': 5, 'Площадь Александра Невского-2': 0.1, 'Маяковская': 3},
'Елизаровская': {'Ломоносовская': 3, 'Площадь Александра Невского-1': 5},
'Ломоносовская': {'Пролетарская': 3, 'Елизаровская': 3}, 'Пролетарская': {'Обухово': 3, 'Ломоносовская': 3},
'Обухово': {'Рыбацкое': 4, 'Пролетарская': 3}, 'Рыбацкое': {'Обухово': 4}, 'Комендантский проспект': {'Старая деревня': 3},
'Старая деревня': {'Крестовский остров': 3, 'Комендантский проспект': 3},
'Крестовский остров': {'Чкаловская': 4, 'Старая деревня': 3}, 'Чкаловская': {'Спортивная': 2, 'Крестовский остров': 4},
'Спортивная': {'Адмиралтейская': 3, 'Чкаловская': 2}, 'Адмиралтейская': {'Садовая': 3, 'Спортивная': 3},
'Садовая': {'Звенигородская': 4, 'Спасская': 0.1, 'Сенная площадь': 0.1, 'Адмиралтейская': 3, 'Сенная площадь': 0.1},
'Звенигородская': {'Обводный канал': 3, 'Пушкинская': 0.1, 'Садовая': 4},
'Обводный канал': {'Волковская': 3, 'Звенигородская': 3}, 'Волковская': {'Бухаресткая': 3, 'Обводный канал': 3},
'Бухаресткая': {'Международная': 3, 'Волковская': 3}, 'Международная': {'Проспект Славы': 2, 'Бухаресткая': 3},
'Проспект Славы': {'Дунайская': 3, 'Международная': 2}, 'Дунайская': {'Шушары': 3, 'Проспект Славы': 3},
'Шушары': {'Дунайская': 3}, 'Парнас': {'Проспект Просвещения': 3}, 'Проспект Просвещения': {'Озерки': 2, 'Парнас': 3},
'Озерки': {'Удельная': 3, 'Проспект Просвещения': 2}, 'Удельная': {'Пионерская': 3, 'Озерки': 3},
'Пионерская': {'Черная речка': 3, 'Удельная': 3}, 'Черная речка': {'Петроградская': 4, 'Пионерская': 3},
'Петроградская': {'Горьковская': 2, 'Черная речка': 4}, 'Горьковская': {'Невский проспект': 4, 'Петроградская': 2},
'Невский проспект': {'Сенная площадь': 2, 'Гостинный двор': 0.1, 'Горьковская': 4},
'Сенная площадь': {'Садовая': 0.1, 'Невский проспект': 2},
'Технологический институт-2': {'Фрунзенская': 2, 'Технологический институт-1': 0, 'Сенная площадь': 3},
'Фрунзенская': {'Московские ворота': 2, 'Технологический институт-2': 2},
'Московские ворота': {'Электросила': 2, 'Фрунзенская': 2}, 'Электросила': {'Парк Победы': 2, 'Московские ворота': 2},
'Парк Победы': {'Московская': 3, 'Электросила': 2}, 'Московская': {'Звездная': 4, 'Парк Победы': 3},
'Звездная': {'Купчино': 3, 'Московская': 4}, 'Купчино': {'Звездная': 3}, 'Девяткино': {'Гражданский проспект': 3},
'Гражданский проспект': {'Академическая': 3, 'Девяткино': 3},
'Академическая': {'Политехническая': 2, 'Гражданский проспект': 3},
'Политехническая': {'Площадь Мужества': 3, 'Академическая': 2}, 'Площадь Мужества': {'Лесная': 3, 'Политехническая': 3},
'Лесная': {'Выборгская': 3, 'Площадь Мужества': 3}, 'Выборгская': {'Площадь Ленина': 2, 'Лесная': 3},
'Площадь Ленина': {'Чернышевская': 3, 'Выборгская': 2}, 'Чернышевская': {'Площадь Восстания': 2, 'Площадь Ленина': 3},
'Площадь Восстания': {'Владимирская': 2, 'Маяковская': 0, 'Чернышевская': 2},
'Владимирская': {'Пушкинская': 2, 'Достоевская': 0, 'Площадь Восстания': 2},
'Пушкинская': {'Технологический институт-1': 2, 'Звенигородская': 0.1, 'Владимирская': 2},
'Технологический институт-1': {'Балтийская': 2, 'Технологический институт-2': 0, 'Пушкинская': 2},
'Балтийская': {'Нарвская': 3, 'Технологический институт-1': 2}, 'Нарвская': {'Кировский завод': 4, 'Балтийская': 3},
'Кировский завод': {'Автово': 2, 'Нарвская': 4}, 'Автово': {'Ленинский проспект': 3, 'Кировский завод': 2},
'Ленинский проспект': {'Проспект Ветеранов': 2, 'Автово': 3}, 'Проспект Ветеранов': {'Ленинский проспект': 2},
'Спасская': {'Достоевская': 4, 'Садовая': 0.1, 'Сенная площадь': 0.1},
'Достоевская': {'Лиговский проспект': 2, 'Владимирская': 0, 'Спасская': 4},
'Лиговский проспект': {'Площадь Александра Невского-2': 2, 'Достоевская': 2},
'Площадь Александра Невского-2': {'Новочеркасская': 3, 'Площадь Александра Невского-1': 0.1, 'Лиговский проспект': 2},
'Новочеркасская': {'Ладожская': 3, 'Площадь Александра Невского-2': 3},
'Ладожская': {'Проспект Большевиков': 3, 'Новочеркасская': 3}, 'Проспект Большевиков': {'Улица Дыбенко': 2, 'Ладожская': 3},
'Улица Дыбенко': {'Проспект Большевиков': 2},
'Сенная площадь': {'Технологический институт-2': 3, 'Садовая': 0.1, 'Спасская': 0.1}}
"""
# print(f'Граф:\n{g.graph}')

# получение узлов (используется в алгоритме для нахождения unvisited_nodes)
"""OUT:
Узлы:
['Беговая', 'Зенит', 'Приморская', 'Василеостровкая', 'Гостинный двор', 'Маяковская', 'Площадь Александра Невского-1',
'Елизаровская', 'Ломоносовская', 'Пролетарская', 'Обухово', 'Рыбацкое', 'Комендантский проспект', 'Старая деревня',
'Крестовский остров', 'Чкаловская', 'Спортивная', 'Адмиралтейская', 'Садовая', 'Звенигородская', 'Обводный канал',
'Волковская', 'Бухаресткая', 'Международная', 'Проспект Славы', 'Дунайская', 'Шушары', 'Парнас', 'Проспект Просвещения',
'Озерки', 'Удельная', 'Пионерская', 'Черная речка', 'Петроградская', 'Горьковская', 'Невский проспект', 'Сенная площадь',
'Технологический институт-2', 'Фрунзенская', 'Московские ворота', 'Электросила', 'Парк Победы', 'Московская', 'Звездная',
'Купчино', 'Девяткино', 'Гражданский проспект', 'Академическая', 'Политехническая', 'Площадь Мужества', 'Лесная',
'Выборгская', 'Площадь Ленина', 'Чернышевская', 'Площадь Восстания', 'Владимирская', 'Пушкинская', 'Технологический
институт-1', 'Балтийская', 'Нарвская', 'Кировский завод', 'Автово', 'Ленинский проспект', 'Проспект Ветеранов',
'Спасская', 'Достоевская', 'Лиговский проспект', 'Площадь Александра Невского-2', 'Новочеркасская', 'Ладожская',
'Проспект Большевиков', 'Улица Дыбенко']
"""
# print(f'Узлы:\n{g.get_nodes()}')

# получение соседей узла
"""OUT:
Соседние узлы:
['Зенит', 'Василеостровкая']
"""
# print(f'Соседние узлы:\n{g.get_outgoing_edges(start_node)}')

# получение расстояние между двумя узлами
# print(f'Время в пути: {g.value(start_node, target_node)} мин.') # OUT: Время в пути: 4 мин.
# print(g.value('Приморская', 'Василеостровска')) # OUT: Маршрут не существует.
# print(g.value('Приморска', 'Василеостровская')) # OUT: Маршрут не существует.

#########################################################################################################################

# Пример 1
# Схема метро Санкт-Петербурга 2022 находится в файле Map_Metro_Spb_2022.png

# Входные данные:
start_node = 'Зенит' # стартовкая точка
target_node = 'Пролетарская' # пункт назначения

# добавление имен узлов в виде списка
nodes = green_line + purple_line + blue_line + red_line + yellow_line

# добавление весов узлам (время в пути до узла).
# если станция закрыта или её нужно обьехать время в пути до станции нужно указать равным 0 (None).
init_graph = {'Беговая': {'Зенит': 4},
              'Зенит': {'Приморская': 4},
              'Приморская': {'Василеостровкая': 4},
              'Василеостровкая': {'Гостинный двор': 4},
              'Гостинный двор': {'Маяковская': 3, 'Невский проспект': 2},
              'Маяковская': {'Площадь Александра Невского-1': 3, 'Площадь Восстания': 2},
              'Площадь Александра Невского-1': {'Елизаровская': 5, 'Площадь Александра Невского-2': 2},
              'Елизаровская': {'Ломоносовская': 3},
              'Ломоносовская': {'Пролетарская': 3},
              'Пролетарская': {'Обухово': 3},
              'Обухово': {'Рыбацкое': 4},

              'Комендантский проспект': {'Старая деревня': 3},
              'Старая деревня': {'Крестовский остров': 3},
              'Крестовский остров': {'Чкаловская': 4},
              'Чкаловская': {'Спортивная': 2},
              'Спортивная': {'Адмиралтейская': 3},
              'Адмиралтейская': {'Садовая': 3},
              'Садовая': {'Звенигородская': 4, 'Спасская': 3, 'Сенная площадь': 3},
              'Звенигородская': {'Обводный канал': 3, 'Пушкинская': 2},
              'Обводный канал': {'Волковская': 3},
              'Волковская': {'Бухаресткая': 3},
              'Бухаресткая': {'Международная': 3},
              'Международная': {'Проспект Славы': 2},
              'Проспект Славы': {'Дунайская': 3},
              'Дунайская': {'Шушары': 3},

              'Парнас': {'Проспект Просвещения': 3},
              'Проспект Просвещения': {'Озерки': 2},
              'Озерки': {'Удельная': 3},
              'Удельная': {'Пионерская': 3},
              'Пионерская': {'Черная речка': 3},
              'Черная речка': {'Петроградская': 4},
              'Петроградская': {'Горьковская': 2},
              'Горьковская': {'Невский проспект': 4},
              'Невский проспект': {'Сенная площадь': 2, 'Гостинный двор': 2},
              'Сенная площадь': {'Технологический институт-2': 3, 'Садовая': 3, 'Спасская': 3},
              'Технологический институт-2': {'Фрунзенская': 2, 'Технологический институт-1': 1},
              'Фрунзенская': {'Московские ворота': 2},
              'Московские ворота': {'Электросила': 2},
              'Электросила': {'Парк Победы': 2},
              'Парк Победы': {'Московская': 3},
              'Московская': {'Звездная': 4},
              'Звездная': {'Купчино': 3},

              'Девяткино': {'Гражданский проспект': 3},
              'Гражданский проспект': {'Академическая': 3},
              'Академическая': {'Политехническая': 2},
              'Политехническая': {'Площадь Мужества': 3},
              'Площадь Мужества': {'Лесная': 3},
              'Лесная': {'Выборгская': 3},
              'Выборгская': {'Площадь Ленина': 2},
              'Площадь Ленина': {'Чернышевская': 3},
              'Чернышевская': {'Площадь Восстания': 2},
              'Площадь Восстания': {'Владимирская': 2, 'Маяковская': 2},
              'Владимирская': {'Пушкинская': 2, 'Достоевская': 2},
              'Пушкинская': {'Технологический институт-1': 2, 'Звенигородская': 2},
              'Технологический институт-1': {'Балтийская': 2, 'Технологический институт-2': 1},
              'Балтийская': {'Нарвская': 3},
              'Нарвская': {'Кировский завод': 4},
              'Кировский завод': {'Автово': 2},
              'Автово': {'Ленинский проспект': 3},
              'Ленинский проспект': {'Проспект Ветеранов': 2},

              'Спасская': {'Достоевская': 4, 'Садовая': 3, 'Сенная площадь': 3},
              'Достоевская': {'Лиговский проспект': 2, 'Владимирская': 2},
              'Лиговский проспект': {'Площадь Александра Невского-2': 2},
              'Площадь Александра Невского-2': {'Новочеркасская': 3, 'Площадь Александра Невского-1': 2},
              'Новочеркасская': {'Ладожская': 3},
              'Ладожская': {'Проспект Большевиков': 3},
              'Проспект Большевиков': {'Улица Дыбенко': 2}
}

# добавление графа
g = Graph(nodes, init_graph)

# Выходные данные:
previous_nodes, shortest_path = dijkstra_algorithm(g, start_node) # запускаем алгоритм Дэйкстра
"""OUT:
Найден лучший маршрут из 'Зенит' в 'Пролетарская':
Зенит -> Приморская -> Василеостровкая -> Гостинный двор -> Маяковская -> Площадь Александра Невского-1 ->
Елизаровская -> Ломоносовская -> Пролетарская
Время в пути: 29 мин.
"""
print_result(previous_nodes, shortest_path, start_node, target_node) # вывод результата

# Пример 2
# Схема метро Санкт-Петербурга 2022 находится в файле Map_Metro_Spb_2022.png

# Входные данные:
start_node = 'Площадь Ленина' # стартовкая точка
target_node = 'Пролетарская' # пункт назначения

# добавление имен узлов в виде списка
nodes = green_line + purple_line + blue_line + red_line + yellow_line

# добавление весов узлам (время в пути до узла).
# если станция закрыта или её нужно обьехать время в пути до станции нужно указать равным 0 (None).
init_graph = {'Беговая': {'Зенит': 4},
              'Зенит': {'Приморская': 4},
              'Приморская': {'Василеостровкая': 4},
              'Василеостровкая': {'Гостинный двор': 4},
              'Гостинный двор': {'Маяковская': 3, 'Невский проспект': 2},
              'Маяковская': {'Площадь Александра Невского-1': 3, 'Площадь Восстания': 2},
              'Площадь Александра Невского-1': {'Елизаровская': 5, 'Площадь Александра Невского-2': 2},
              'Елизаровская': {'Ломоносовская': 3},
              'Ломоносовская': {'Пролетарская': 3},
              'Пролетарская': {'Обухово': 3},
              'Обухово': {'Рыбацкое': 4},

              'Комендантский проспект': {'Старая деревня': 3},
              'Старая деревня': {'Крестовский остров': 3},
              'Крестовский остров': {'Чкаловская': 4},
              'Чкаловская': {'Спортивная': 2},
              'Спортивная': {'Адмиралтейская': 3},
              'Адмиралтейская': {'Садовая': 3},
              'Садовая': {'Звенигородская': 4, 'Спасская': 3, 'Сенная площадь': 3},
              'Звенигородская': {'Обводный канал': 3, 'Пушкинская': 2},
              'Обводный канал': {'Волковская': 3},
              'Волковская': {'Бухаресткая': 3},
              'Бухаресткая': {'Международная': 3},
              'Международная': {'Проспект Славы': 2},
              'Проспект Славы': {'Дунайская': 3},
              'Дунайская': {'Шушары': 3},

              'Парнас': {'Проспект Просвещения': 3},
              'Проспект Просвещения': {'Озерки': 2},
              'Озерки': {'Удельная': 3},
              'Удельная': {'Пионерская': 3},
              'Пионерская': {'Черная речка': 3},
              'Черная речка': {'Петроградская': 4},
              'Петроградская': {'Горьковская': 2},
              'Горьковская': {'Невский проспект': 4},
              'Невский проспект': {'Сенная площадь': 2, 'Гостинный двор': 2},
              'Сенная площадь': {'Технологический институт-2': 3, 'Садовая': 3, 'Спасская': 3},
              'Технологический институт-2': {'Фрунзенская': 2, 'Технологический институт-1': 1},
              'Фрунзенская': {'Московские ворота': 2},
              'Московские ворота': {'Электросила': 2},
              'Электросила': {'Парк Победы': 2},
              'Парк Победы': {'Московская': 3},
              'Московская': {'Звездная': 4},
              'Звездная': {'Купчино': 3},

              'Девяткино': {'Гражданский проспект': 3},
              'Гражданский проспект': {'Академическая': 3},
              'Академическая': {'Политехническая': 2},
              'Политехническая': {'Площадь Мужества': 3},
              'Площадь Мужества': {'Лесная': 3},
              'Лесная': {'Выборгская': 3},
              'Выборгская': {'Площадь Ленина': 2},
              'Площадь Ленина': {'Чернышевская': 3},
              'Чернышевская': {'Площадь Восстания': 2},
              'Площадь Восстания': {'Владимирская': 2, 'Маяковская': 2},
              'Владимирская': {'Пушкинская': 2, 'Достоевская': 2},
              'Пушкинская': {'Технологический институт-1': 2, 'Звенигородская': 2},
              'Технологический институт-1': {'Балтийская': 2, 'Технологический институт-2': 1},
              'Балтийская': {'Нарвская': 3},
              'Нарвская': {'Кировский завод': 4},
              'Кировский завод': {'Автово': 2},
              'Автово': {'Ленинский проспект': 3},
              'Ленинский проспект': {'Проспект Ветеранов': 2},

              'Спасская': {'Достоевская': 4, 'Садовая': 3, 'Сенная площадь': 3},
              'Достоевская': {'Лиговский проспект': 2, 'Владимирская': 2},
              'Лиговский проспект': {'Площадь Александра Невского-2': 2},
              'Площадь Александра Невского-2': {'Новочеркасская': 3, 'Площадь Александра Невского-1': 2},
              'Новочеркасская': {'Ладожская': 3},
              'Ладожская': {'Проспект Большевиков': 3},
              'Проспект Большевиков': {'Улица Дыбенко': 2}
}

# добавление графа
g = Graph(nodes, init_graph)

# Выходные данные:
previous_nodes, shortest_path = dijkstra_algorithm(g, start_node) # запускаем алгоритм Дэйкстра
"""OUT:
Найден лучший маршрут из 'Площадь Ленина' в 'Пролетарская':
Площадь Ленина -> Чернышевская -> Площадь Восстания -> Маяковская -> Площадь Александра Невского-1 ->
Елизаровская -> Ломоносовская -> Пролетарская
Время в пути: 21 мин.
"""
print_result(previous_nodes, shortest_path, start_node, target_node) # вывод результата

# Пример 3
# Схема метро Санкт-Петербурга 2022 находится в файле Map_Metro_Spb_2022.png

# Входные данные:
start_node = 'Парнас' # стартовкая точка
target_node = 'Купчино' # пункт назначения

# добавление имен узлов в виде списка
nodes = green_line + purple_line + blue_line + red_line + yellow_line

# добавление весов узлам (время в пути до узла).
# если станция закрыта или её нужно обьехать время в пути до станции нужно указать равным 0 (None).
init_graph = {'Беговая': {'Зенит': 4},
              'Зенит': {'Приморская': 4},
              'Приморская': {'Василеостровкая': 4},
              'Василеостровкая': {'Гостинный двор': 4},
              'Гостинный двор': {'Маяковская': 3, 'Невский проспект': 2},
              'Маяковская': {'Площадь Александра Невского-1': 3, 'Площадь Восстания': 2},
              'Площадь Александра Невского-1': {'Елизаровская': 5, 'Площадь Александра Невского-2': 2},
              'Елизаровская': {'Ломоносовская': 3},
              'Ломоносовская': {'Пролетарская': 3},
              'Пролетарская': {'Обухово': 3},
              'Обухово': {'Рыбацкое': 4},

              'Комендантский проспект': {'Старая деревня': 3},
              'Старая деревня': {'Крестовский остров': 3},
              'Крестовский остров': {'Чкаловская': 4},
              'Чкаловская': {'Спортивная': 2},
              'Спортивная': {'Адмиралтейская': 3},
              'Адмиралтейская': {'Садовая': 3},
              'Садовая': {'Звенигородская': 4, 'Спасская': 3, 'Сенная площадь': 3},
              'Звенигородская': {'Обводный канал': 3, 'Пушкинская': 2},
              'Обводный канал': {'Волковская': 3},
              'Волковская': {'Бухаресткая': 3},
              'Бухаресткая': {'Международная': 3},
              'Международная': {'Проспект Славы': 2},
              'Проспект Славы': {'Дунайская': 3},
              'Дунайская': {'Шушары': 3},

              'Парнас': {'Проспект Просвещения': 3},
              'Проспект Просвещения': {'Озерки': 2},
              'Озерки': {'Удельная': 3},
              'Удельная': {'Пионерская': 3},
              'Пионерская': {'Черная речка': 3},
              'Черная речка': {'Петроградская': 4},
              'Петроградская': {'Горьковская': 2},
              'Горьковская': {'Невский проспект': 4},
              'Невский проспект': {'Сенная площадь': 2, 'Гостинный двор': 2},
              'Сенная площадь': {'Технологический институт-2': 3, 'Садовая': 3, 'Спасская': 3},
              'Технологический институт-2': {'Фрунзенская': 2, 'Технологический институт-1': 1},
              'Фрунзенская': {'Московские ворота': 2},
              'Московские ворота': {'Электросила': 2},
              'Электросила': {'Парк Победы': 2},
              'Парк Победы': {'Московская': 3},
              'Московская': {'Звездная': 4},
              'Звездная': {'Купчино': 3},

              'Девяткино': {'Гражданский проспект': 3},
              'Гражданский проспект': {'Академическая': 3},
              'Академическая': {'Политехническая': 2},
              'Политехническая': {'Площадь Мужества': 3},
              'Площадь Мужества': {'Лесная': 3},
              'Лесная': {'Выборгская': 3},
              'Выборгская': {'Площадь Ленина': 2},
              'Площадь Ленина': {'Чернышевская': 3},
              'Чернышевская': {'Площадь Восстания': 2},
              'Площадь Восстания': {'Владимирская': 2, 'Маяковская': 2},
              'Владимирская': {'Пушкинская': 2, 'Достоевская': 2},
              'Пушкинская': {'Технологический институт-1': 2, 'Звенигородская': 2},
              'Технологический институт-1': {'Балтийская': 2, 'Технологический институт-2': 1},
              'Балтийская': {'Нарвская': 3},
              'Нарвская': {'Кировский завод': 4},
              'Кировский завод': {'Автово': 2},
              'Автово': {'Ленинский проспект': 3},
              'Ленинский проспект': {'Проспект Ветеранов': 2},

              'Спасская': {'Достоевская': 4, 'Садовая': 3, 'Сенная площадь': 3},
              'Достоевская': {'Лиговский проспект': 2, 'Владимирская': 2},
              'Лиговский проспект': {'Площадь Александра Невского-2': 2},
              'Площадь Александра Невского-2': {'Новочеркасская': 3, 'Площадь Александра Невского-1': 2},
              'Новочеркасская': {'Ладожская': 3},
              'Ладожская': {'Проспект Большевиков': 3},
              'Проспект Большевиков': {'Улица Дыбенко': 2}
}

# добавление графа
g = Graph(nodes, init_graph)

# Выходные данные:
previous_nodes, shortest_path = dijkstra_algorithm(g, start_node) # запускаем алгоритм Дэйкстра
"""OUT:
Найден лучший маршрут из 'Парнас' в 'Купчино':
Парнас -> Проспект Просвещения -> Озерки -> Удельная -> Пионерская -> Черная речка -> Петроградская ->
Горьковская -> Невский проспект -> Сенная площадь -> Технологический институт-2 -> Фрунзенская -> Московские
ворота -> Электросила -> Парк Победы -> Московская -> Звездная -> Купчино
Время в пути: 47 мин.
"""
print_result(previous_nodes, shortest_path, start_node, target_node) # вывод результата

# Пример 4
# Схема метро Санкт-Петербурга 2022 находится в файле Map_Metro_Spb_2022.png

# Входные данные:
start_node = 'Площадь Ленина' # стартовкая точка
target_node = 'Московские ворота' # пункт назначения

# добавление имен узлов в виде списка
nodes = green_line + purple_line + blue_line + red_line + yellow_line

# добавление весов узлам (время в пути до узла).
# если станция закрыта или её нужно обьехать время в пути до станции нужно указать равным 0 (None).
init_graph = {'Беговая': {'Зенит': 4},
              'Зенит': {'Приморская': 4},
              'Приморская': {'Василеостровкая': 4},
              'Василеостровкая': {'Гостинный двор': 4},
              'Гостинный двор': {'Маяковская': 3, 'Невский проспект': 2},
              'Маяковская': {'Площадь Александра Невского-1': 3, 'Площадь Восстания': 2},
              'Площадь Александра Невского-1': {'Елизаровская': 5, 'Площадь Александра Невского-2': 2},
              'Елизаровская': {'Ломоносовская': 3},
              'Ломоносовская': {'Пролетарская': 3},
              'Пролетарская': {'Обухово': 3},
              'Обухово': {'Рыбацкое': 4},

              'Комендантский проспект': {'Старая деревня': 3},
              'Старая деревня': {'Крестовский остров': 3},
              'Крестовский остров': {'Чкаловская': 4},
              'Чкаловская': {'Спортивная': 2},
              'Спортивная': {'Адмиралтейская': 3},
              'Адмиралтейская': {'Садовая': 3},
              'Садовая': {'Звенигородская': 4, 'Спасская': 3, 'Сенная площадь': 3},
              'Звенигородская': {'Обводный канал': 3, 'Пушкинская': 2},
              'Обводный канал': {'Волковская': 3},
              'Волковская': {'Бухаресткая': 3},
              'Бухаресткая': {'Международная': 3},
              'Международная': {'Проспект Славы': 2},
              'Проспект Славы': {'Дунайская': 3},
              'Дунайская': {'Шушары': 3},

              'Парнас': {'Проспект Просвещения': 3},
              'Проспект Просвещения': {'Озерки': 2},
              'Озерки': {'Удельная': 3},
              'Удельная': {'Пионерская': 3},
              'Пионерская': {'Черная речка': 3},
              'Черная речка': {'Петроградская': 4},
              'Петроградская': {'Горьковская': 2},
              'Горьковская': {'Невский проспект': 4},
              'Невский проспект': {'Сенная площадь': 2, 'Гостинный двор': 2},
              'Сенная площадь': {'Технологический институт-2': 3, 'Садовая': 3, 'Спасская': 3},
              'Технологический институт-2': {'Фрунзенская': 2, 'Технологический институт-1': 1},
              'Фрунзенская': {'Московские ворота': 2},
              'Московские ворота': {'Электросила': 2},
              'Электросила': {'Парк Победы': 2},
              'Парк Победы': {'Московская': 3},
              'Московская': {'Звездная': 4},
              'Звездная': {'Купчино': 3},

              'Девяткино': {'Гражданский проспект': 3},
              'Гражданский проспект': {'Академическая': 3},
              'Академическая': {'Политехническая': 2},
              'Политехническая': {'Площадь Мужества': 3},
              'Площадь Мужества': {'Лесная': 3},
              'Лесная': {'Выборгская': 3},
              'Выборгская': {'Площадь Ленина': 2},
              'Площадь Ленина': {'Чернышевская': 3},
              'Чернышевская': {'Площадь Восстания': 2},
              'Площадь Восстания': {'Владимирская': 2, 'Маяковская': 2},
              'Владимирская': {'Пушкинская': 2, 'Достоевская': 2},
              'Пушкинская': {'Технологический институт-1': 2, 'Звенигородская': 2},
              'Технологический институт-1': {'Балтийская': 2, 'Технологический институт-2': 1},
              'Балтийская': {'Нарвская': 3},
              'Нарвская': {'Кировский завод': 4},
              'Кировский завод': {'Автово': 2},
              'Автово': {'Ленинский проспект': 3},
              'Ленинский проспект': {'Проспект Ветеранов': 2},

              'Спасская': {'Достоевская': 4, 'Садовая': 3, 'Сенная площадь': 3},
              'Достоевская': {'Лиговский проспект': 2, 'Владимирская': 2},
              'Лиговский проспект': {'Площадь Александра Невского-2': 2},
              'Площадь Александра Невского-2': {'Новочеркасская': 3, 'Площадь Александра Невского-1': 2},
              'Новочеркасская': {'Ладожская': 3},
              'Ладожская': {'Проспект Большевиков': 3},
              'Проспект Большевиков': {'Улица Дыбенко': 2}
}

# добавление графа
g = Graph(nodes, init_graph)

# Выходные данные:
previous_nodes, shortest_path = dijkstra_algorithm(g, start_node) # запускаем алгоритм Дэйкстра
"""OUT:
Найден лучший маршрут из 'Площадь Ленина' в 'Московские ворота':
Площадь Ленина -> Чернышевская -> Площадь Восстания -> Владимирская -> Пушкинская -> Технологический
институт-1 -> Технологический институт-2 -> Фрунзенская -> Московские ворота
Время в пути: 16 мин.
"""
print_result(previous_nodes, shortest_path, start_node, target_node) # вывод результата
